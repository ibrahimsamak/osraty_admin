{"remainingRequest":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/cdk/overlay/overlay.js","dependencies":[{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/cdk/overlay/overlay.js","mtime":499162500000},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/cache-loader/dist/cjs.js","mtime":1541238936889},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { Injectable } from '@angular/core';\nimport { NbComponentPortal, NbOverlay, } from './mapping';\nimport { NbLayoutDirectionService } from '../../../services/direction.service';\nexport function patch(container, containerContext) {\n    Object.assign(container.instance, containerContext);\n    container.changeDetectorRef.detectChanges();\n    return container;\n}\nexport function createContainer(ref, container, context, componentFactoryResolver) {\n    var containerRef = ref.attach(new NbComponentPortal(container, null, null, componentFactoryResolver));\n    patch(containerRef, context);\n    return containerRef;\n}\nvar NbOverlayService = /*@__PURE__*/ (function () {\n    function NbOverlayService(overlay, layoutDirection) {\n        this.overlay = overlay;\n        this.layoutDirection = layoutDirection;\n    }\n    Object.defineProperty(NbOverlayService.prototype, \"scrollStrategies\", {\n        get: function () {\n            return this.overlay.scrollStrategies;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbOverlayService.prototype.create = function (config) {\n        var overlayRef = this.overlay.create(config);\n        this.layoutDirection.onDirectionChange()\n            .subscribe(function (dir) { return overlayRef.setDirection(dir); });\n        return overlayRef;\n    };\n    return NbOverlayService;\n}());\nexport { NbOverlayService };\n//# sourceMappingURL=overlay.js.map\n",null]}