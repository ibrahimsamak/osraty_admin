{"remainingRequest":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/input/input.directive.js","dependencies":[{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/input/input.directive.js","mtime":499162500000},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/cache-loader/dist/cjs.js","mtime":1541238936889},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Directive, Input, HostBinding } from '@angular/core';\nimport { convertToBoolProperty } from '../helpers';\n/**\n * Basic input directive.\n *\n * ```html\n * <input nbInput></input>\n * ```\n *\n * ### Installation\n *\n * Import `NbInputModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbInputModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Default input size is `medium`:\n * @stacked-example(Showcase, input/input-showcase.component)\n *\n * Inputs are available in multiple colors using `status` property:\n * @stacked-example(Input Colors, input/input-colors.component)\n *\n * There are three input sizes:\n *\n * @stacked-example(Input Sizes, input/input-sizes.component)\n *\n * Inputs available in different shapes, which could be combined with the other properties:\n * @stacked-example(Input Shapes, input/input-shapes.component)\n *\n * `nbInput` could be applied to the following selectors - `input`, `textarea`:\n * @stacked-example(Input Elements, input/input-types.component)\n *\n * You can add `fullWidth` attribute to make element fill container:\n * @stacked-example(Full width inputs, input/input-full-width.component)\n *\n * @styles\n *\n * form-control-bg:\n * form-control-border-width:\n * form-control-border-type:\n * form-control-border-color:\n * form-control-text-primary-color:\n * form-control-focus-bg:\n * form-control-selected-border-color:\n * form-control-placeholder-font-size:\n * form-control-placeholder-color:\n * form-control-font-size:\n * form-control-padding:\n * form-control-font-size-sm:\n * form-control-padding-sm:\n * form-control-font-size-lg:\n * form-control-padding-lg:\n * form-control-border-radius:\n * form-control-semi-round-border-radius:\n * form-control-round-border-radius:\n * form-control-info-border-color:\n * form-control-success-border-color:\n * form-control-warning-border-color:\n * form-control-danger-border-color:\n */\nvar NbInputDirective = /*@__PURE__*/ (function () {\n    function NbInputDirective() {\n        this.size = NbInputDirective.SIZE_MEDIUM;\n        /**\n           * Field shapes: `rectangle`, `round`, `semi-round`\n           * @param {string} val\n           */\n        this.shape = NbInputDirective.SHAPE_RECTANGLE;\n        this.fullWidth = false;\n    }\n    Object.defineProperty(NbInputDirective.prototype, \"setSize\", {\n        set: /**\n           * Field size, available sizes:\n           * `small`, `medium`, `large`\n           * @param {string} val\n           */ function (value) {\n            this.size = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbInputDirective.prototype, \"setFullWidth\", {\n        set: /**\n           * If set element will fill container\n           * @param {string}\n           */ function (value) {\n            this.fullWidth = convertToBoolProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbInputDirective.prototype, \"small\", {\n        get: function () {\n            return this.size === NbInputDirective.SIZE_SMALL;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbInputDirective.prototype, \"medium\", {\n        get: function () {\n            return this.size === NbInputDirective.SIZE_MEDIUM;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbInputDirective.prototype, \"large\", {\n        get: function () {\n            return this.size === NbInputDirective.SIZE_LARGE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbInputDirective.prototype, \"info\", {\n        get: function () {\n            return this.status === NbInputDirective.STATUS_INFO;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbInputDirective.prototype, \"success\", {\n        get: function () {\n            return this.status === NbInputDirective.STATUS_SUCCESS;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbInputDirective.prototype, \"warning\", {\n        get: function () {\n            return this.status === NbInputDirective.STATUS_WARNING;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbInputDirective.prototype, \"danger\", {\n        get: function () {\n            return this.status === NbInputDirective.STATUS_DANGER;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbInputDirective.prototype, \"rectangle\", {\n        get: function () {\n            return this.shape === NbInputDirective.SHAPE_RECTANGLE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbInputDirective.prototype, \"semiRound\", {\n        get: function () {\n            return this.shape === NbInputDirective.SHAPE_SEMI_ROUND;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbInputDirective.prototype, \"round\", {\n        get: function () {\n            return this.shape === NbInputDirective.SHAPE_ROUND;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbInputDirective.SIZE_SMALL = 'small';\n    NbInputDirective.SIZE_MEDIUM = 'medium';\n    NbInputDirective.SIZE_LARGE = 'large';\n    NbInputDirective.STATUS_INFO = 'info';\n    NbInputDirective.STATUS_SUCCESS = 'success';\n    NbInputDirective.STATUS_WARNING = 'warning';\n    NbInputDirective.STATUS_DANGER = 'danger';\n    NbInputDirective.SHAPE_RECTANGLE = 'rectangle';\n    NbInputDirective.SHAPE_SEMI_ROUND = 'semi-round';\n    NbInputDirective.SHAPE_ROUND = 'round';\n    return NbInputDirective;\n}());\nexport { NbInputDirective };\n//# sourceMappingURL=input.directive.js.map\n",null]}