{"remainingRequest":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/calendar/calendar-range.component.js","dependencies":[{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/calendar/calendar-range.component.js","mtime":499162500000},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/cache-loader/dist/cjs.js","mtime":1541238936889},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NbCalendarSize, NbCalendarViewMode, NbDateService } from '../calendar-kit';\nimport { NbCalendarRangeDayCellComponent, NbCalendarRangeYearCellComponent } from './calendar-range-cells';\n/**\n * CalendarRange component provides a capability to choose a date range.\n *\n * ```html\n * <nb-calendar [(date)]=\"date\"></nb-calendar>\n * <nb-calendar [date]=\"date\" (dateChange)=\"handleDateChange($event)\"></nb-calendar>\n * ```\n *\n * Basic usage example\n * @stacked-example(Range, calendar/calendar-range-showcase.component)\n *\n * ### Installation\n *\n * Import `NbCalendarRangeModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbCalendarRangeModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n *\n * ### Usage\n *\n * CalendarRange component supports all of the Calendar component customization properties. More defails can be found\n * in the [Calendar component docs](docs/components/calendar).\n *\n * @styles\n *\n * calendar-width\n * calendar-body-height\n * calendar-header-title-font-size\n * calendar-header-title-font-weight\n * calendar-header-sub-title-font-size\n * calendar-header-sub-title-font-weight\n * calendar-navigation-button-width\n * calendar-selected-item-bg\n * calendar-hover-item-bg\n * calendar-today-item-bg\n * calendar-active-item-bg\n * calendar-fg\n * calendar-selected-fg\n * calendar-day-cell-width\n * calendar-day-cell-height\n * calendar-month-cell-width\n * calendar-month-cell-height\n * calendar-year-cell-width\n * calendar-year-cell-height\n * calendar-inactive-opacity\n * calendar-disabled-opacity\n * calendar-border-radius\n * calendar-weekday-width\n * calendar-weekday-height\n * calendar-weekday-font-size\n * calendar-weekday-font-weight\n * calendar-weekday-fg\n * calendar-weekday-holiday-fg\n * calendar-range-bg-in-range\n * calendar-large-width\n * calendar-large-body-height\n * calendar-day-cell-large-width\n * calendar-day-cell-large-height\n * calendar-month-cell-large-width\n * calendar-month-cell-large-height\n * calendar-year-cell-large-width\n * calendar-year-cell-large-height\n * */\nvar NbCalendarRangeComponent = /*@__PURE__*/ (function () {\n    function NbCalendarRangeComponent(dateService) {\n        this.dateService = dateService;\n        /**\n           * Defines if we should render previous and next months\n           * in the current month view.\n           * */\n        this.boundingMonth = true;\n        /**\n           * Defines starting view for the calendar.\n           * */\n        this.startView = NbCalendarViewMode.DATE;\n        this.dayCellComponent = NbCalendarRangeDayCellComponent;\n        this.yearCellComponent = NbCalendarRangeYearCellComponent;\n        /**\n           * Size of the calendar and entire components.\n           * Can be 'medium' which is default or 'large'.\n           * */\n        this.size = NbCalendarSize.MEDIUM;\n        /**\n           * Determines should we show calendars header or not.\n           * */\n        this.showHeader = true;\n        /**\n           * Emits range when start selected and emits again when end selected.\n           * */\n        this.rangeChange = new EventEmitter();\n    }\n    Object.defineProperty(NbCalendarRangeComponent.prototype, \"_cellComponent\", {\n        set: /**\n           * Custom day cell component. Have to implement `NbCalendarCell` interface.\n           * */ function (cellComponent) {\n            if (cellComponent) {\n                this.dayCellComponent = cellComponent;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbCalendarRangeComponent.prototype, \"_yearCellComponent\", {\n        set: /**\n           * Custom year cell component. Have to implement `NbCalendarCell` interface.\n           * */ function (cellComponent) {\n            if (cellComponent) {\n                this.yearCellComponent = cellComponent;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbCalendarRangeComponent.prototype.onChange = function (date) {\n        this.initDateIfNull();\n        this.handleSelected(date);\n    };\n    NbCalendarRangeComponent.prototype.initDateIfNull = function () {\n        if (!this.range) {\n            this.range = { start: null, end: null };\n        }\n    };\n    NbCalendarRangeComponent.prototype.handleSelected = function (date) {\n        if (this.selectionStarted()) {\n            this.selectEnd(date);\n        }\n        else {\n            this.selectStart(date);\n        }\n    };\n    NbCalendarRangeComponent.prototype.selectionStarted = function () {\n        var _a = this.range, start = _a.start, end = _a.end;\n        return start && !end;\n    };\n    NbCalendarRangeComponent.prototype.selectStart = function (start) {\n        this.selectRange({ start: start });\n    };\n    NbCalendarRangeComponent.prototype.selectEnd = function (date) {\n        var start = this.range.start;\n        if (this.dateService.compareDates(date, start) > 0) {\n            this.selectRange({ start: start, end: date });\n        }\n        else {\n            this.selectRange({ start: date, end: start });\n        }\n    };\n    NbCalendarRangeComponent.prototype.selectRange = function (range) {\n        this.range = range;\n        this.rangeChange.emit(range);\n    };\n    return NbCalendarRangeComponent;\n}());\nexport { NbCalendarRangeComponent };\n//# sourceMappingURL=calendar-range.component.js.map\n",null]}