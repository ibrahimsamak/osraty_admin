{"remainingRequest":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/toastr/toastr-config.js","dependencies":[{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/toastr/toastr-config.js","mtime":499162500000},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/cache-loader/dist/cjs.js","mtime":1541238936889},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { InjectionToken } from '@angular/core';\nimport { NbToastStatus } from './model';\nimport { NbGlobalLogicalPosition } from '../cdk';\nexport var NB_TOASTR_CONFIG = new InjectionToken('Default toastr options');\n/**\n * The `NbToastrConfig` class describes configuration of the `NbToastrService.show` and global toastr configuration.\n * */\nvar /**\n * The `NbToastrConfig` class describes configuration of the `NbToastrService.show` and global toastr configuration.\n * */\nNbToastrConfig = /** @class */ (function () {\n    function NbToastrConfig(config) {\n        /**\n           * Determines where on the screen toast have to be rendered.\n           * */\n        this.position = NbGlobalLogicalPosition.TOP_END;\n        /**\n           * Status chooses color scheme for the toast.\n           * */\n        this.status = NbToastStatus.PRIMARY;\n        /**\n           * Duration is timeout between toast appears and disappears.\n           * */\n        this.duration = 3000;\n        /**\n           * Destroy by click means you can hide the toast by clicking it.\n           * */\n        this.destroyByClick = true;\n        /**\n           * If preventDuplicates is true then the next toast with the same title and message will not be rendered.\n           * */\n        this.preventDuplicates = false;\n        /**\n           * Determines render icon or not.\n           * */\n        this.hasIcon = true;\n        /**\n           * Icon class that can be provided to render custom icon.\n           * */\n        this.icon = 'nb-email';\n        /**\n           * Toast status icon-class mapping.\n           * */\n        this.icons = (_a = {},\n            _a[NbToastStatus.DANGER] = 'nb-danger',\n            _a[NbToastStatus.SUCCESS] = 'nb-checkmark-circle',\n            _a[NbToastStatus.INFO] = 'nb-help',\n            _a[NbToastStatus.WARNING] = 'nb-alert',\n            _a[NbToastStatus.PRIMARY] = 'nb-email',\n            _a);\n        this.patchIcon(config);\n        Object.assign(this, config);\n        var _a;\n    }\n    NbToastrConfig.prototype.patchIcon = function (config) {\n        if (!('icon' in config)) {\n            config.icon = this.icons[config.status || NbToastStatus.PRIMARY];\n        }\n    };\n    return NbToastrConfig;\n}());\n/**\n * The `NbToastrConfig` class describes configuration of the `NbToastrService.show` and global toastr configuration.\n * */\nexport { NbToastrConfig };\n//# sourceMappingURL=toastr-config.js.map",null]}