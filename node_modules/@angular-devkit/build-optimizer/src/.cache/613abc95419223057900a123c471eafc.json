{"remainingRequest":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/button/button.component.js","dependencies":[{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/button/button.component.js","mtime":499162500000},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/cache-loader/dist/cjs.js","mtime":1541238936889},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, Input, HostBinding, HostListener } from '@angular/core';\nimport { convertToBoolProperty } from '../helpers';\n/**\n * Basic button component.\n *\n * Default button size is `medium` and status color is `primary`:\n * @stacked-example(Button Showcase, button/button-showcase.component)\n *\n * ```html\n * <button nbButton></button>\n * ```\n * ### Installation\n *\n * Import `NbButtonModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbButtonModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Buttons are available in multiple colors using `status` property:\n * @stacked-example(Button Colors, button/button-colors.component.html)\n *\n * There are three button sizes:\n *\n * @stacked-example(Button Sizes, button/button-sizes.component.html)\n *\n * And two additional style types - `outline`:\n *\n * @stacked-example(Outline Buttons, button/button-outline.component.html)\n *\n * and `hero`:\n *\n * @stacked-example(Button Colors, button/button-hero.component.html)\n *\n * Buttons available in different shapes, which could be combined with the other properties:\n * @stacked-example(Button Shapes, button/button-shapes.component)\n *\n * `nbButton` could be applied to the following selectors - `button`, `input[type=\"button\"]`, `input[type=\"submit\"]`\n * and `a`:\n * @stacked-example(Button Elements, button/button-types.component.html)\n *\n * Button can be made `fullWidth`:\n * @stacked-example(Full Width Button, button/button-full-width.component.html)\n *\n * @styles\n *\n * btn-fg:\n * btn-font-family:\n * btn-line-height:\n * btn-disabled-opacity:\n * btn-cursor:\n * btn-primary-bg:\n * btn-secondary-bg:\n * btn-info-bg:\n * btn-success-bg:\n * btn-warning-bg:\n * btn-danger-bg:\n * btn-secondary-border:\n * btn-secondary-border-width:\n * btn-padding-y-lg:\n * btn-padding-x-lg:\n * btn-font-size-lg:\n * btn-padding-y-md:\n * btn-padding-x-md:\n * btn-font-size-md:\n * btn-padding-y-sm:\n * btn-padding-x-sm:\n * btn-font-size-sm:\n * btn-padding-y-xs:\n * btn-padding-x-xs:\n * btn-font-size-xs:\n * btn-border-radius:\n * btn-rectangle-border-radius:\n * btn-semi-round-border-radius:\n * btn-round-border-radius:\n * btn-hero-shadow:\n * btn-hero-text-shadow:\n * btn-hero-bevel-size:\n * btn-hero-glow-size:\n * btn-hero-primary-glow-size:\n * btn-hero-success-glow-size:\n * btn-hero-warning-glow-size:\n * btn-hero-info-glow-size:\n * btn-hero-danger-glow-size:\n * btn-hero-secondary-glow-size:\n * btn-hero-degree:\n * btn-hero-primary-degree:\n * btn-hero-success-degree:\n * btn-hero-warning-degree:\n * btn-hero-info-degree:\n * btn-hero-danger-degree:\n * btn-hero-secondary-degree:\n * btn-hero-border-radius:\n * btn-outline-fg:\n * btn-outline-hover-fg:\n * btn-outline-focus-fg:\n */\nvar NbButtonComponent = /*@__PURE__*/ (function () {\n    function NbButtonComponent() {\n        this.fullWidth = false;\n    }\n    Object.defineProperty(NbButtonComponent.prototype, \"xsmall\", {\n        get: function () {\n            return this.size === NbButtonComponent.SIZE_XSMALL;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"small\", {\n        get: function () {\n            return this.size === NbButtonComponent.SIZE_SMALL;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"medium\", {\n        get: function () {\n            return this.size === NbButtonComponent.SIZE_MEDIUM;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"large\", {\n        get: function () {\n            return this.size === NbButtonComponent.SIZE_LARGE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"primary\", {\n        get: function () {\n            return this.status === NbButtonComponent.STATUS_PRIMARY;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"info\", {\n        get: function () {\n            return this.status === NbButtonComponent.STATUS_INFO;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"success\", {\n        get: function () {\n            return this.status === NbButtonComponent.STATUS_SUCCESS;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"warning\", {\n        get: function () {\n            return this.status === NbButtonComponent.STATUS_WARNING;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"danger\", {\n        get: function () {\n            return this.status === NbButtonComponent.STATUS_DANGER;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"rectangle\", {\n        get: function () {\n            return this.shape === NbButtonComponent.SHAPE_RECTANGLE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"round\", {\n        get: function () {\n            return this.shape === NbButtonComponent.SHAPE_ROUND;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"semiRound\", {\n        get: function () {\n            return this.shape === NbButtonComponent.SHAPE_SEMI_ROUND;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"tabbable\", {\n        get: function () {\n            return this.disabled ? '-1' : '0';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"setSize\", {\n        set: /**\n           * Button size, available sizes:\n           * `xxsmall`, `xsmall`, `small`, `medium`, `large`\n           * @param {string} val\n           */ function (val) {\n            this.size = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"setStatus\", {\n        set: /**\n           * Button status (adds specific styles):\n           * `primary`, `info`, `success`, `warning`, `danger`\n           * @param {string} val\n           */ function (val) {\n            this.status = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"setShape\", {\n        set: /**\n           * Button shapes: `rectangle`, `round`, `semi-round`\n           * @param {string} val\n           */ function (val) {\n            this.shape = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"setHero\", {\n        set: /**\n           * Adds `hero` styles\n           * @param {boolean} val\n           */ function (val) {\n            this.hero = convertToBoolProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"setDisabled\", {\n        set: /**\n           * Disables the button\n           * @param {boolean} val\n           */ function (val) {\n            this.disabled = convertToBoolProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"setFullWidth\", {\n        set: /**\n           * If set element will fill its container\n           * @param {boolean}\n           */ function (value) {\n            this.fullWidth = convertToBoolProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbButtonComponent.prototype, \"setOutline\", {\n        set: /**\n           * Adds `outline` styles\n           * @param {boolean} val\n           */ function (val) {\n            this.outline = convertToBoolProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbButtonComponent.prototype.onClick = function (event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    };\n    NbButtonComponent.SIZE_XSMALL = 'xsmall';\n    NbButtonComponent.SIZE_SMALL = 'small';\n    NbButtonComponent.SIZE_MEDIUM = 'medium';\n    NbButtonComponent.SIZE_LARGE = 'large';\n    NbButtonComponent.STATUS_PRIMARY = 'primary';\n    NbButtonComponent.STATUS_INFO = 'info';\n    NbButtonComponent.STATUS_SUCCESS = 'success';\n    NbButtonComponent.STATUS_WARNING = 'warning';\n    NbButtonComponent.STATUS_DANGER = 'danger';\n    NbButtonComponent.SHAPE_RECTANGLE = 'rectangle';\n    NbButtonComponent.SHAPE_ROUND = 'round';\n    NbButtonComponent.SHAPE_SEMI_ROUND = 'semi-round';\n    return NbButtonComponent;\n}());\nexport { NbButtonComponent };\n//# sourceMappingURL=button.component.js.map\n",null]}