{"remainingRequest":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/search/search.component.js","dependencies":[{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/search/search.component.js","mtime":499162500000},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/cache-loader/dist/cjs.js","mtime":1541238936889},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output, ViewChild, ChangeDetectorRef, } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\nimport { filter, delay, takeWhile } from 'rxjs/operators';\nimport { NbSearchService } from './search.service';\nimport { NbThemeService } from '../../services/theme.service';\nimport { NbOverlayService, NbPortalDirective } from '../cdk';\n/**\n * search-field-component is used under the hood by nb-search component\n * can't be used itself\n */\nvar NbSearchFieldComponent = /*@__PURE__*/ (function () {\n    function NbSearchFieldComponent() {\n        this.show = false;\n        this.close = new EventEmitter();\n        this.search = new EventEmitter();\n    }\n    Object.defineProperty(NbSearchFieldComponent.prototype, \"showClass\", {\n        get: function () {\n            return this.show;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSearchFieldComponent.prototype, \"modalZoomin\", {\n        get: function () {\n            return this.type === NbSearchFieldComponent.TYPE_MODAL_ZOOMIN;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSearchFieldComponent.prototype, \"rotateLayout\", {\n        get: function () {\n            return this.type === NbSearchFieldComponent.TYPE_ROTATE_LAYOUT;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSearchFieldComponent.prototype, \"modalMove\", {\n        get: function () {\n            return this.type === NbSearchFieldComponent.TYPE_MODAL_MOVE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSearchFieldComponent.prototype, \"curtain\", {\n        get: function () {\n            return this.type === NbSearchFieldComponent.TYPE_CURTAIN;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSearchFieldComponent.prototype, \"columnCurtain\", {\n        get: function () {\n            return this.type === NbSearchFieldComponent.TYPE_COLUMN_CURTAIN;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSearchFieldComponent.prototype, \"modalDrop\", {\n        get: function () {\n            return this.type === NbSearchFieldComponent.TYPE_MODAL_DROP;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbSearchFieldComponent.prototype, \"modalHalf\", {\n        get: function () {\n            return this.type === NbSearchFieldComponent.TYPE_MODAL_HALF;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbSearchFieldComponent.prototype.ngOnChanges = function (_a) {\n        var show = _a.show;\n        var becameHidden = !show.isFirstChange() && show.currentValue === false;\n        if (becameHidden && this.inputElement) {\n            this.inputElement.nativeElement.value = '';\n        }\n        this.focusInput();\n    };\n    NbSearchFieldComponent.prototype.ngAfterViewInit = function () {\n        this.focusInput();\n    };\n    NbSearchFieldComponent.prototype.emitClose = function () {\n        this.close.emit();\n    };\n    NbSearchFieldComponent.prototype.submitSearch = function (term) {\n        if (term) {\n            this.search.emit(term);\n        }\n    };\n    NbSearchFieldComponent.prototype.focusInput = function () {\n        if (this.show && this.inputElement) {\n            this.inputElement.nativeElement.focus();\n        }\n    };\n    NbSearchFieldComponent.TYPE_MODAL_ZOOMIN = 'modal-zoomin';\n    NbSearchFieldComponent.TYPE_ROTATE_LAYOUT = 'rotate-layout';\n    NbSearchFieldComponent.TYPE_MODAL_MOVE = 'modal-move';\n    NbSearchFieldComponent.TYPE_CURTAIN = 'curtain';\n    NbSearchFieldComponent.TYPE_COLUMN_CURTAIN = 'column-curtain';\n    NbSearchFieldComponent.TYPE_MODAL_DROP = 'modal-drop';\n    NbSearchFieldComponent.TYPE_MODAL_HALF = 'modal-half';\n    return NbSearchFieldComponent;\n}());\nexport { NbSearchFieldComponent };\n/**\n * Beautiful full-page search control.\n *\n * @stacked-example(Showcase, search/search-showcase.component)\n *\n * Basic setup:\n *\n * ```ts\n *  <nb-search type=\"rotate-layout\"></nb-search>\n * ```\n * ### Installation\n *\n * Import `NbSearchModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbSearchModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Several animation types are available:\n * modal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half\n *\n * It is also possible to handle search event using `NbSearchService`:\n *\n * @stacked-example(Search Event, search/search-event.component)\n *\n * @styles\n *\n * search-btn-open-fg:\n * search-btn-close-fg:\n * search-bg:\n * search-bg-secondary:\n * search-text:\n * search-info:\n * search-dash:\n * search-placeholder:\n */\nvar NbSearchComponent = /*@__PURE__*/ (function () {\n    function NbSearchComponent(searchService, themeService, router, overlayService, changeDetector) {\n        this.searchService = searchService;\n        this.themeService = themeService;\n        this.router = router;\n        this.overlayService = overlayService;\n        this.changeDetector = changeDetector;\n        this.alive = true;\n        this.showSearchField = false;\n        /**\n           * Search input placeholder\n           * @type {string}\n           */\n        this.placeholder = 'Search...';\n        /**\n           * Hint showing under the input field to improve user experience\n           *\n           * @type {string}\n           */\n        this.hint = 'Hit enter to search';\n    }\n    NbSearchComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.router.events\n            .pipe(takeWhile(function () { return _this.alive; }), filter(function (event) { return event instanceof NavigationEnd; }))\n            .subscribe(function () { return _this.hideSearch(); });\n        this.searchService.onSearchActivate()\n            .pipe(takeWhile(function () { return _this.alive; }), filter(function (data) { return !_this.tag || data.tag === _this.tag; }))\n            .subscribe(function () { return _this.openSearch(); });\n        this.searchService.onSearchDeactivate()\n            .pipe(takeWhile(function () { return _this.alive; }), filter(function (data) { return !_this.tag || data.tag === _this.tag; }))\n            .subscribe(function () { return _this.hideSearch(); });\n    };\n    NbSearchComponent.prototype.ngOnDestroy = function () {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.removeLayoutClasses();\n            this.overlayRef.detach();\n        }\n        this.alive = false;\n    };\n    NbSearchComponent.prototype.openSearch = function () {\n        var _this = this;\n        if (!this.overlayRef) {\n            this.overlayRef = this.overlayService.create();\n            this.overlayRef.attach(this.searchFieldPortal);\n        }\n        this.themeService.appendLayoutClass(this.type);\n        observableOf(null).pipe(delay(0)).subscribe(function () {\n            _this.themeService.appendLayoutClass('with-search');\n            _this.showSearchField = true;\n            _this.changeDetector.detectChanges();\n        });\n    };\n    NbSearchComponent.prototype.hideSearch = function () {\n        this.removeLayoutClasses();\n        this.showSearchField = false;\n        this.changeDetector.detectChanges();\n        this.searchButton.nativeElement.focus();\n    };\n    NbSearchComponent.prototype.search = function (term) {\n        this.searchService.submitSearch(term, this.tag);\n        this.hideSearch();\n    };\n    NbSearchComponent.prototype.removeLayoutClasses = function () {\n        var _this = this;\n        this.themeService.removeLayoutClass('with-search');\n        observableOf(null).pipe(delay(500)).subscribe(function () {\n            _this.themeService.removeLayoutClass(_this.type);\n        });\n    };\n    return NbSearchComponent;\n}());\nexport { NbSearchComponent };\n//# sourceMappingURL=search.component.js.map\n",null]}