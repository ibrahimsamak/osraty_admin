{"remainingRequest":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/cdk/adapter/overlay-container-adapter.js","dependencies":[{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/cdk/adapter/overlay-container-adapter.js","mtime":499162500000},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/cache-loader/dist/cjs.js","mtime":1541238936889},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Injectable } from '@angular/core';\nimport { NbOverlayContainer } from '../overlay/mapping';\n/**\n * Provides nb-layout as overlay container.\n * Container has to be cleared when layout destroys.\n * Another way previous version of the container will be used\n * but it isn't inserted in DOM and exists in memory only.\n * This case important only if you switch between multiple layouts.\n * */\nvar NbOverlayContainerAdapter = /*@__PURE__*/ (function (_super) {\n    __extends(NbOverlayContainerAdapter, _super);\n    function NbOverlayContainerAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NbOverlayContainerAdapter.prototype.setContainer = function (container) {\n        this.container = container;\n    };\n    NbOverlayContainerAdapter.prototype.clearContainer = function () {\n        this.container = null;\n        this._containerElement = null;\n    };\n    NbOverlayContainerAdapter.prototype._createContainer = function () {\n        var container = this._document.createElement('div');\n        container.classList.add('cdk-overlay-container');\n        this.container.appendChild(container);\n        this._containerElement = container;\n    };\n    return NbOverlayContainerAdapter;\n}(NbOverlayContainer));\nexport { NbOverlayContainerAdapter };\n//# sourceMappingURL=overlay-container-adapter.js.map\n",null]}