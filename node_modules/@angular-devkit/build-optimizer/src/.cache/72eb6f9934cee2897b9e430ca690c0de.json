{"remainingRequest":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/tabset/tabset.component.js","dependencies":[{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/tabset/tabset.component.js","mtime":499162500000},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/cache-loader/dist/cjs.js","mtime":1541238936889},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { map, delay } from 'rxjs/operators';\nimport { Component, Input, Output, EventEmitter, ContentChildren, HostBinding, ChangeDetectorRef, } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { convertToBoolProperty } from '../helpers';\n/**\n * Specific tab container.\n *\n * ```ts\n * <nb-tab tabTitle=\"Users\"\n *   badgeText=\"99+\"\n *   badgeStatus=\"danger\">\n *   <p>List of <strong>users</strong>.</p>\n * </nb-tab>\n ```\n */\nvar NbTabComponent = /*@__PURE__*/ (function () {\n    function NbTabComponent() {\n        this.activeValue = false;\n        this.responsiveValue = false;\n        this.init = false;\n    }\n    Object.defineProperty(NbTabComponent.prototype, \"responsive\", {\n        get: function () {\n            return this.responsiveValue;\n        },\n        set: /**\n           * Show only icons when width is smaller than `tabs-icon-only-max-width`\n           * @type {boolean}\n           */ function (val) {\n            this.responsiveValue = convertToBoolProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbTabComponent.prototype, \"active\", {\n        get: /**\n           * Specifies active tab\n           * @returns {boolean}\n           */ function () {\n            return this.activeValue;\n        },\n        set: function (val) {\n            this.activeValue = convertToBoolProperty(val);\n            if (this.activeValue) {\n                this.init = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbTabComponent.prototype, \"lazyLoad\", {\n        set: /**\n           * Lazy load content before tab selection\n           * TODO: rename, as lazy is by default, and this is more `instant load`\n           * @param {boolean} val\n           */ function (val) {\n            this.init = convertToBoolProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NbTabComponent;\n}());\nexport { NbTabComponent };\n// TODO: Combine tabset with route-tabset, so that we can:\n// - have similar interface\n// - easy to migrate from one to another\n// - can mix them both (route/content tab)\n/**\n *\n * Dynamic tabset component.\n * @stacked-example(Showcase, tabset/tabset-showcase.component)\n *\n * Basic tabset example\n *\n * ```html\n * <nb-tabset>\n *  <nb-tab tabTitle=\"Simple Tab #1\">\n *    Tab content 1\n *  </nb-tab>\n *  <nb-tab tabTitle=\"Simple Tab #2\">\n *    Tab content 2\n *  </nb-tab>\n * </nb-tabset>\n * ```\n *\n * ### Installation\n *\n * Import `NbTabsetModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbTabsetModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * It is also possible to set a badge to a particular tab:\n * @stacked-example(Tab With Badge, tabset/tabset-badge.component)\n *\n * and we can set it to full a width of a parent component\n * @stacked-example(Full Width, tabset/tabset-width.component)\n *\n * `tabIcon` should be used to add an icon to the tab. Icon can also be combined with title.\n * `responsive` tab property if set allows you to hide the title on smaller screens\n * (`tabs-icon-only-max-width` property) for better responsive behaviour. You can open the following example and make\n * your screen smaller - titles will be hidden in the last tabset in the list:\n *\n * @stacked-example(Icon, tabset/tabset-icon.component)\n *\n * @styles\n *\n * tabs-font-family:\n * tabs-font-size:\n * tabs-content-font-family:\n * tabs-content-font-size:\n * tabs-active-bg:\n * tabs-active-font-weight:\n * tabs-padding:\n * tabs-content-padding:\n * tabs-header-bg:\n * tabs-separator:\n * tabs-fg:\n * tabs-fg-text:\n * tabs-fg-heading:\n * tabs-bg:\n * tabs-selected:\n * tabs-icon-only-max-width\n *\n */\nvar NbTabsetComponent = /*@__PURE__*/ (function () {\n    function NbTabsetComponent(route, changeDetectorRef) {\n        this.route = route;\n        this.changeDetectorRef = changeDetectorRef;\n        this.fullWidthValue = false;\n        /**\n           * Emits when tab is selected\n           * @type EventEmitter<any>\n           */\n        this.changeTab = new EventEmitter();\n    }\n    Object.defineProperty(NbTabsetComponent.prototype, \"fullWidth\", {\n        set: /**\n           * Take full width of a parent\n           * @param {boolean} val\n           */ function (val) {\n            this.fullWidthValue = convertToBoolProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // TODO: refactoring this component, avoid change detection loop\n    // TODO: refactoring this component, avoid change detection loop\n    NbTabsetComponent.prototype.ngAfterContentInit =\n        // TODO: refactoring this component, avoid change detection loop\n        function () {\n            var _this = this;\n            this.route.params\n                .pipe(map(function (params) {\n                return _this.tabs.find(function (tab) { return _this.routeParam ? tab.route === params[_this.routeParam] : tab.active; });\n            }), delay(0))\n                .subscribe(function (activeTab) {\n                _this.selectTab(activeTab || _this.tabs.first);\n                _this.changeDetectorRef.markForCheck();\n            });\n        };\n    // TODO: navigate to routeParam\n    // TODO: navigate to routeParam\n    NbTabsetComponent.prototype.selectTab =\n        // TODO: navigate to routeParam\n        function (selectedTab) {\n            this.tabs.forEach(function (tab) { return tab.active = tab === selectedTab; });\n            this.changeTab.emit(selectedTab);\n        };\n    return NbTabsetComponent;\n}());\nexport { NbTabsetComponent };\n//# sourceMappingURL=tabset.component.js.map\n",null]}