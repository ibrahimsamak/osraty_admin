{"remainingRequest":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/checkbox/checkbox.component.js","dependencies":[{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/checkbox/checkbox.component.js","mtime":499162500000},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/cache-loader/dist/cjs.js","mtime":1541238936889},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, Input, HostBinding, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { convertToBoolProperty } from '../helpers';\n/**\n * Styled checkbox component\n *\n * @stacked-example(Showcase, checkbox/checkbox-showcase.component)\n *\n * ### Installation\n *\n * Import `NbCheckboxComponent` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbCheckboxComponent,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Can have one of the following statuses: danger, success or warning\n *\n * @stacked-example(Colored Checkboxes, checkbox/checkbox-status.component)\n *\n * @additional-example(Disabled Checkbox, checkbox/checkbox-disabled.component)\n *\n * @styles\n *\n * checkbox-bg:\n * checkbox-size:\n * checkbox-border-size:\n * checkbox-border-color:\n * checkbox-checkmark:\n * checkbox-checked-bg:\n * checkbox-checked-size:\n * checkbox-checked-border-size:\n * checkbox-checked-border-color:\n * checkbox-checked-checkmark:\n * checkbox-disabled-bg:\n * checkbox-disabled-size:\n * checkbox-disabled-border-size:\n * checkbox-disabled-border-color:\n * checkbox-disabled-checkmark:\n */\nvar NbCheckboxComponent = /*@__PURE__*/ (function () {\n    function NbCheckboxComponent() {\n        /**\n           * Checkbox value\n           * @type {boolean}\n           * @private\n           */\n        this._value = false;\n        this.disabled = false;\n        this.onChange = function () { };\n        this.onTouched = function () { };\n    }\n    Object.defineProperty(NbCheckboxComponent.prototype, \"setDisabled\", {\n        set: function (val) {\n            this.disabled = convertToBoolProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbCheckboxComponent.prototype, \"setStatus\", {\n        set: /**\n           * Checkbox status (success, warning, danger)\n           * @param {string} val\n           */ function (val) {\n            this.status = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbCheckboxComponent.prototype, \"success\", {\n        get: function () {\n            return this.status === 'success';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbCheckboxComponent.prototype, \"warning\", {\n        get: function () {\n            return this.status === 'warning';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbCheckboxComponent.prototype, \"danger\", {\n        get: function () {\n            return this.status === 'danger';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbCheckboxComponent.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (val) {\n            this._value = val;\n            this.onChange(val);\n            this.onTouched();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbCheckboxComponent.prototype.registerOnChange = function (fn) {\n        this.onChange = fn;\n    };\n    NbCheckboxComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    NbCheckboxComponent.prototype.writeValue = function (val) {\n        this.value = val;\n    };\n    NbCheckboxComponent.prototype.setDisabledState = function (val) {\n        this.disabled = convertToBoolProperty(val);\n    };\n    return NbCheckboxComponent;\n}());\nexport { NbCheckboxComponent };\n//# sourceMappingURL=checkbox.component.js.map\n",null]}