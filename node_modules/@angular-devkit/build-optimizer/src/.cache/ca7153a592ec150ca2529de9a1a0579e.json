{"remainingRequest":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/accordion/accordion.component.js","dependencies":[{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/accordion/accordion.component.js","mtime":499162500000},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/cache-loader/dist/cjs.js","mtime":1541238936889},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { convertToBoolProperty } from '../helpers';\n/**\n * An accordion allows to toggle the display of sections of content\n *\n * Basic example\n * @stacked-example(Showcase, accordion/accordion-showcase.component)\n *\n * ```ts\n * <nb-accordion>\n *  <nb-accordion-item>\n *   <nb-accordion-item-header>Product Details</nb-accordion-item-header>\n *   <nb-accordion-item-body>\n *     Item Content\n *   </nb-accordion-item-body>\n *  </nb-accordion-item>\n * </nb-accordion>\n * ```\n * ### Installation\n *\n * Import `NbAccordionModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbAccordionModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * With `multi` mode acordion can have multiple items expanded:\n * @stacked-example(Showcase, accordion/accordion-multi.component)\n *\n * `NbAccordionItemComponent` has several method, for example it is possible to trigger item click/toggle:\n * @stacked-example(Showcase, accordion/accordion-toggle.component)\n *\n * @styles\n *\n * accordion-padding:\n * accordion-separator:\n * accordion-header-font-family:\n * accordion-header-font-size:\n * accordion-header-font-weight:\n * accordion-header-fg-heading:\n * accordion-header-disabled-fg:\n * accordion-header-border-width:\n * accordion-header-border-type:\n * accordion-header-border-color:\n * accordion-item-bg:\n * accordion-item-font-size:\n * accordion-item-font-weight:\n * accordion-item-font-family:\n * accordion-item-fg-text:\n * accordion-item-shadow:\n */\nvar NbAccordionComponent = /*@__PURE__*/ (function () {\n    function NbAccordionComponent() {\n        this.openCloseItems = new Subject();\n        this.multiValue = false;\n    }\n    Object.defineProperty(NbAccordionComponent.prototype, \"multi\", {\n        get: /**\n           *  Allow multiple items to be expanded at the same time.\n           * @type {boolean}\n           */ function () {\n            return this.multiValue;\n        },\n        set: function (val) {\n            this.multiValue = convertToBoolProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens all enabled accordion items.\n     */\n    /**\n       * Opens all enabled accordion items.\n       */\n    NbAccordionComponent.prototype.openAll = /**\n       * Opens all enabled accordion items.\n       */\n        function () {\n            if (this.multi) {\n                this.openCloseItems.next(false);\n            }\n        };\n    /**\n     * Closes all enabled accordion items.\n     */\n    /**\n       * Closes all enabled accordion items.\n       */\n    NbAccordionComponent.prototype.closeAll = /**\n       * Closes all enabled accordion items.\n       */\n        function () {\n            this.openCloseItems.next(true);\n        };\n    NbAccordionComponent.STATUS_ACTIVE = 'active';\n    NbAccordionComponent.STATUS_DISABLED = 'disabled';\n    NbAccordionComponent.STATUS_PRIMARY = 'primary';\n    NbAccordionComponent.STATUS_INFO = 'info';\n    NbAccordionComponent.STATUS_SUCCESS = 'success';\n    NbAccordionComponent.STATUS_WARNING = 'warning';\n    NbAccordionComponent.STATUS_DANGER = 'danger';\n    return NbAccordionComponent;\n}());\nexport { NbAccordionComponent };\n//# sourceMappingURL=accordion.component.js.map\n",null]}