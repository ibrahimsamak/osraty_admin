{"remainingRequest":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/menu/menu.component.js","dependencies":[{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/menu/menu.component.js","mtime":499162500000},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/cache-loader/dist/cjs.js","mtime":1541238936889},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, Input, Output, EventEmitter, HostBinding, Inject, } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { takeWhile, filter, map } from 'rxjs/operators';\nimport { NbMenuInternalService, NbMenuService } from './menu.service';\nimport { convertToBoolProperty } from '../helpers';\nimport { NB_WINDOW } from '../../theme.options';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nexport var NbToggleStates;\n(function (NbToggleStates) {\n    NbToggleStates[\"Expanded\"] = \"expanded\";\n    NbToggleStates[\"Collapsed\"] = \"collapsed\";\n})(NbToggleStates || (NbToggleStates = {}));\nvar NbMenuItemComponent = /*@__PURE__*/ (function () {\n    function NbMenuItemComponent(menuService) {\n        this.menuService = menuService;\n        this.menuItem = null;\n        this.hoverItem = new EventEmitter();\n        this.toggleSubMenu = new EventEmitter();\n        this.selectItem = new EventEmitter();\n        this.itemClick = new EventEmitter();\n        this.alive = true;\n    }\n    NbMenuItemComponent.prototype.ngDoCheck = function () {\n        this.toggleState = this.menuItem.expanded ? NbToggleStates.Expanded : NbToggleStates.Collapsed;\n    };\n    NbMenuItemComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this.menuService.onSubmenuToggle()\n            .pipe(takeWhile(function () { return _this.alive; }), filter(function (_a) {\n            var item = _a.item;\n            return item === _this.menuItem;\n        }), map(function (_a) {\n            var item = _a.item;\n            return item.expanded;\n        }))\n            .subscribe(function (isExpanded) { return _this.toggleState = isExpanded ? NbToggleStates.Expanded : NbToggleStates.Collapsed; });\n    };\n    NbMenuItemComponent.prototype.ngOnDestroy = function () {\n        this.alive = false;\n    };\n    NbMenuItemComponent.prototype.onToggleSubMenu = function (item) {\n        this.toggleSubMenu.emit(item);\n    };\n    NbMenuItemComponent.prototype.onHoverItem = function (item) {\n        this.hoverItem.emit(item);\n    };\n    NbMenuItemComponent.prototype.onSelectItem = function (item) {\n        this.selectItem.emit(item);\n    };\n    NbMenuItemComponent.prototype.onItemClick = function (item) {\n        this.itemClick.emit(item);\n    };\n    return NbMenuItemComponent;\n}());\nexport { NbMenuItemComponent };\n/**\n * Vertical menu component.\n *\n * Accepts a list of menu items and renders them accordingly. Supports multi-level menus.\n *\n * Basic example\n * @stacked-example(Showcase, menu/menu-showcase.component)\n *\n * ```ts\n * // ...\n * items: NbMenuItem[] = [\n *  {\n *    title: home,\n *    link: '/'\n *  },\n *  {\n *    title: dashboard,\n *    link: 'dashboard'\n *  }\n * ];\n * // ...\n * <nb-menu [items]=\"items\"></nb-menu>\n * ```\n * ### Installation\n *\n * Import `NbMenuModule.forRoot()` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbMenuModule.forRoot(),\n *   ],\n * })\n * export class AppModule { }\n * ```\n * and `NbMenuModule` to your feature module where the component should be shown:\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbMenuModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Two-level menu example\n * @stacked-example(Two Levels, menu/menu-children.component)\n *\n * @styles\n *\n * menu-font-family:\n * menu-font-size:\n * menu-font-weight:\n * menu-fg:\n * menu-bg:\n * menu-active-fg:\n * menu-active-bg:\n * menu-active-font-weight:\n * menu-submenu-bg:\n * menu-submenu-fg:\n * menu-submenu-active-fg:\n * menu-submenu-active-bg:\n * menu-submenu-active-border-color:\n * menu-submenu-active-shadow:\n * menu-submenu-hover-fg:\n * menu-submenu-hover-bg:\n * menu-submenu-item-border-width:\n * menu-submenu-item-border-radius:\n * menu-submenu-item-padding:\n * menu-submenu-item-container-padding:\n * menu-submenu-padding:\n * menu-group-font-weight:\n * menu-group-font-size:\n * menu-group-fg:\n * menu-group-padding\n * menu-item-padding:\n * menu-item-separator:\n * menu-icon-font-size:\n * menu-icon-margin:\n * menu-icon-color:\n * menu-icon-active-color:\n */\nvar NbMenuComponent = /*@__PURE__*/ (function () {\n    function NbMenuComponent(window, menuInternalService, router) {\n        this.window = window;\n        this.menuInternalService = menuInternalService;\n        this.router = router;\n        this.alive = true;\n        this.autoCollapseValue = false;\n    }\n    Object.defineProperty(NbMenuComponent.prototype, \"inverse\", {\n        set: /**\n           * Makes colors inverse based on current theme\n           * @type boolean\n           */ function (val) {\n            this.inverseValue = convertToBoolProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbMenuComponent.prototype, \"autoCollapse\", {\n        set: /**\n           * Collapse all opened submenus on the toggle event\n           * Default value is \"false\"\n           * @type boolean\n           */ function (val) {\n            this.autoCollapseValue = convertToBoolProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbMenuComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.menuInternalService.prepareItems(this.items);\n        this.menuInternalService\n            .onAddItem()\n            .pipe(takeWhile(function () { return _this.alive; }), filter(function (data) { return _this.compareTag(data.tag); }))\n            .subscribe(function (data) { return _this.onAddItem(data); });\n        this.menuInternalService\n            .onNavigateHome()\n            .pipe(takeWhile(function () { return _this.alive; }), filter(function (data) { return _this.compareTag(data.tag); }))\n            .subscribe(function () { return _this.navigateHome(); });\n        this.menuInternalService\n            .onGetSelectedItem()\n            .pipe(takeWhile(function () { return _this.alive; }), filter(function (data) { return _this.compareTag(data.tag); }))\n            .subscribe(function (data) {\n            data.listener.next({ tag: _this.tag, item: _this.getSelectedItem(_this.items) });\n        });\n        this.menuInternalService\n            .onCollapseAll()\n            .pipe(takeWhile(function () { return _this.alive; }), filter(function (data) { return _this.compareTag(data.tag); }))\n            .subscribe(function () { return _this.collapseAll(); });\n        this.router.events\n            .pipe(takeWhile(function () { return _this.alive; }), filter(function (event) { return event instanceof NavigationEnd; }))\n            .subscribe(function () {\n            _this.menuInternalService.selectFromUrl(_this.items, _this.tag, _this.autoCollapseValue);\n        });\n    };\n    NbMenuComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        setTimeout(function () { return _this.menuInternalService.selectFromUrl(_this.items, _this.tag, _this.autoCollapseValue); });\n    };\n    NbMenuComponent.prototype.onAddItem = function (data) {\n        (_a = this.items).push.apply(_a, data.items);\n        this.menuInternalService.prepareItems(this.items);\n        this.menuInternalService.selectFromUrl(this.items, this.tag, this.autoCollapseValue);\n        var _a;\n    };\n    NbMenuComponent.prototype.onHoverItem = function (item) {\n        this.menuInternalService.itemHover(item, this.tag);\n    };\n    NbMenuComponent.prototype.onToggleSubMenu = function (item) {\n        if (this.autoCollapseValue) {\n            this.menuInternalService.collapseAll(this.items, this.tag, item);\n        }\n        item.expanded = !item.expanded;\n        this.menuInternalService.submenuToggle(item, this.tag);\n    };\n    // TODO: is not fired on page reload\n    // TODO: is not fired on page reload\n    NbMenuComponent.prototype.onSelectItem =\n        // TODO: is not fired on page reload\n        function (item) {\n            this.menuInternalService.selectItem(item, this.items, this.autoCollapseValue, this.tag);\n        };\n    NbMenuComponent.prototype.onItemClick = function (item) {\n        this.menuInternalService.itemClick(item, this.tag);\n    };\n    NbMenuComponent.prototype.ngOnDestroy = function () {\n        this.alive = false;\n    };\n    NbMenuComponent.prototype.navigateHome = function () {\n        var homeItem = this.getHomeItem(this.items);\n        if (homeItem) {\n            if (homeItem.link) {\n                this.router.navigate([homeItem.link], { queryParams: homeItem.queryParams, fragment: homeItem.fragment });\n            }\n            if (homeItem.url) {\n                this.window.location.href = homeItem.url;\n            }\n        }\n    };\n    NbMenuComponent.prototype.collapseAll = function () {\n        this.menuInternalService.collapseAll(this.items, this.tag);\n    };\n    NbMenuComponent.prototype.getHomeItem = function (items) {\n        for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n            var item = items_1[_i];\n            if (item.home) {\n                return item;\n            }\n            var homeItem = item.children && this.getHomeItem(item.children);\n            if (homeItem) {\n                return homeItem;\n            }\n        }\n    };\n    NbMenuComponent.prototype.compareTag = function (tag) {\n        return !tag || tag === this.tag;\n    };\n    NbMenuComponent.prototype.getSelectedItem = function (items) {\n        var _this = this;\n        var selected = null;\n        items.forEach(function (item) {\n            if (item.selected) {\n                selected = item;\n            }\n            if (item.selected && item.children && item.children.length > 0) {\n                selected = _this.getSelectedItem(item.children);\n            }\n        });\n        return selected;\n    };\n    return NbMenuComponent;\n}());\nexport { NbMenuComponent };\n//# sourceMappingURL=menu.component.js.map\n",null]}