{"remainingRequest":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/datepicker/datepicker.component.js","dependencies":[{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/datepicker/datepicker.component.js","mtime":499162500000},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/cache-loader/dist/cjs.js","mtime":1541238936889},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, ComponentFactoryResolver, Inject, Input, Output, } from '@angular/core';\nimport { takeWhile } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { NbAdjustment, NbComponentPortal, NbOverlayService, NbPosition, NbPositionBuilderService, NbTrigger, NbTriggerStrategyBuilder, patch, } from '../cdk';\nimport { NbDatepickerContainerComponent } from './datepicker-container.component';\nimport { NB_DOCUMENT } from '../../theme.options';\nimport { NbCalendarRangeComponent } from '../calendar/calendar-range.component';\nimport { NbCalendarComponent } from '../calendar/calendar.component';\nimport { NbCalendarSize, NbCalendarViewMode } from '../calendar-kit';\nimport { NbDatepicker } from './datepicker.directive';\n/**\n * The `NbBasePicker` component concentrates overlay manipulation logic.\n * */\nvar NbBasePicker = /*@__PURE__*/ (function (_super) {\n    __extends(NbBasePicker, _super);\n    function NbBasePicker(document, positionBuilder, overlay, cfr) {\n        var _this = _super.call(this) || this;\n        _this.document = document;\n        _this.positionBuilder = positionBuilder;\n        _this.overlay = overlay;\n        _this.cfr = cfr;\n        /**\n           * Defines if we should render previous and next months\n           * in the current month view.\n           * */\n        _this.boundingMonth = true;\n        /**\n           * Defines starting view for calendar.\n           * */\n        _this.startView = NbCalendarViewMode.DATE;\n        /**\n           * Size of the calendar and entire components.\n           * Can be 'medium' which is default or 'large'.\n           * */\n        _this.size = NbCalendarSize.MEDIUM;\n        /**\n           * Hide picker when a date or a range is selected, `true` by default\n           * @type {boolean}\n           */\n        _this.hideOnSelect = true;\n        /**\n           * Stream of picker changes. Required to be the subject because picker hides and shows and picker\n           * change stream becomes recreated.\n           * */\n        _this.onChange$ = new Subject();\n        _this.alive = true;\n        return _this;\n    }\n    Object.defineProperty(NbBasePicker.prototype, \"picker\", {\n        /**\n         * Returns picker instance.\n         * */\n        get: /**\n           * Returns picker instance.\n           * */ function () {\n            return this.pickerRef && this.pickerRef.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbBasePicker.prototype, \"valueChange\", {\n        /**\n         * Stream of picker value changes.\n         * */\n        get: /**\n           * Stream of picker value changes.\n           * */ function () {\n            return this.onChange$.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbBasePicker.prototype.ngOnDestroy = function () {\n        this.alive = false;\n        this.hide();\n        this.ref.dispose();\n    };\n    /**\n     * Datepicker knows nothing about host html input element.\n     * So, attach method attaches datepicker to the host input element.\n     * */\n    /**\n       * Datepicker knows nothing about host html input element.\n       * So, attach method attaches datepicker to the host input element.\n       * */\n    NbBasePicker.prototype.attach = /**\n       * Datepicker knows nothing about host html input element.\n       * So, attach method attaches datepicker to the host input element.\n       * */\n        function (hostRef) {\n            this.hostRef = hostRef;\n            this.positionStrategy = this.createPositionStrategy();\n            this.ref = this.overlay.create({\n                positionStrategy: this.positionStrategy,\n                scrollStrategy: this.overlay.scrollStrategies.reposition(),\n            });\n            this.subscribeOnPositionChange();\n            this.subscribeOnTriggers();\n        };\n    NbBasePicker.prototype.getValidatorConfig = function () {\n        return { min: this.min, max: this.max, filter: this.filter };\n    };\n    NbBasePicker.prototype.show = function () {\n        this.container = this.ref.attach(new NbComponentPortal(NbDatepickerContainerComponent, null, null, this.cfr));\n        this.instantiatePicker();\n        this.subscribeOnValueChange();\n        this.writeQueue();\n        this.patchWithInputs();\n    };\n    NbBasePicker.prototype.shouldHide = function () {\n        return this.hideOnSelect && !!this.value;\n    };\n    NbBasePicker.prototype.hide = function () {\n        this.ref.detach();\n        // save current value if picker was rendered\n        if (this.picker) {\n            this.queue = this.value;\n            this.pickerRef.destroy();\n            this.pickerRef = null;\n            this.container = null;\n        }\n    };\n    NbBasePicker.prototype.createPositionStrategy = function () {\n        return this.positionBuilder\n            .connectedTo(this.hostRef)\n            .position(NbPosition.BOTTOM)\n            .adjustment(NbAdjustment.COUNTERCLOCKWISE);\n    };\n    NbBasePicker.prototype.subscribeOnPositionChange = function () {\n        var _this = this;\n        this.positionStrategy.positionChange\n            .pipe(takeWhile(function () { return _this.alive; }))\n            .subscribe(function (position) { return patch(_this.container, { position: position }); });\n    };\n    NbBasePicker.prototype.createTriggerStrategy = function () {\n        var _this = this;\n        return new NbTriggerStrategyBuilder()\n            .document(this.document)\n            .trigger(NbTrigger.FOCUS)\n            .host(this.hostRef.nativeElement)\n            .container(function () { return _this.container; })\n            .build();\n    };\n    NbBasePicker.prototype.subscribeOnTriggers = function () {\n        var _this = this;\n        var triggerStrategy = this.createTriggerStrategy();\n        triggerStrategy.show$.pipe(takeWhile(function () { return _this.alive; })).subscribe(function () { return _this.show(); });\n        triggerStrategy.hide$.pipe(takeWhile(function () { return _this.alive; })).subscribe(function () { return _this.hide(); });\n    };\n    NbBasePicker.prototype.instantiatePicker = function () {\n        this.pickerRef = this.container.instance.attach(new NbComponentPortal(this.pickerClass, null, null, this.cfr));\n    };\n    /**\n     * Subscribes on picker value changes and emit data through this.onChange$ subject.\n     * */\n    /**\n       * Subscribes on picker value changes and emit data through this.onChange$ subject.\n       * */\n    NbBasePicker.prototype.subscribeOnValueChange = /**\n       * Subscribes on picker value changes and emit data through this.onChange$ subject.\n       * */\n        function () {\n            var _this = this;\n            this.pickerValueChange.subscribe(function (date) {\n                _this.onChange$.next(date);\n            });\n        };\n    NbBasePicker.prototype.patchWithInputs = function () {\n        this.picker.boundingMonth = this.boundingMonth;\n        this.picker.startView = this.startView;\n        this.picker.min = this.min;\n        this.picker.max = this.max;\n        this.picker.filter = this.filter;\n        this.picker._cellComponent = this.dayCellComponent;\n        this.picker.monthCellComponent = this.monthCellComponent;\n        this.picker._yearCellComponent = this.yearCellComponent;\n        this.picker.size = this.size;\n        this.picker.visibleDate = this.visibleDate;\n    };\n    return NbBasePicker;\n}(NbDatepicker));\nexport { NbBasePicker };\n/**\n * The DatePicker components itself.\n * Provides a proxy to `NbCalendar` options as well as custom picker options.\n */\nvar NbDatepickerComponent = /*@__PURE__*/ (function (_super) {\n    __extends(NbDatepickerComponent, _super);\n    function NbDatepickerComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pickerClass = NbCalendarComponent;\n        return _this;\n    }\n    Object.defineProperty(NbDatepickerComponent.prototype, \"date\", {\n        set: /**\n           * Date which will be rendered as selected.\n           * */ function (date) {\n            this.value = date;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbDatepickerComponent.prototype, \"dateChange\", {\n        get: /**\n           * Emits date when selected.\n           * */ function () {\n            return this.valueChange;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbDatepickerComponent.prototype, \"value\", {\n        get: function () {\n            return this.picker.date;\n        },\n        set: function (date) {\n            if (!this.picker) {\n                this.queue = date;\n                return;\n            }\n            if (date) {\n                this.picker.visibleDate = date;\n                this.picker.date = date;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbDatepickerComponent.prototype, \"pickerValueChange\", {\n        get: function () {\n            return this.picker.dateChange;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbDatepickerComponent.prototype.writeQueue = function () {\n        this.value = this.queue;\n    };\n    return NbDatepickerComponent;\n}(NbBasePicker));\nexport { NbDatepickerComponent };\n/**\n * The RangeDatePicker components itself.\n * Provides a proxy to `NbCalendarRange` options as well as custom picker options.\n */\nvar NbRangepickerComponent = /*@__PURE__*/ (function (_super) {\n    __extends(NbRangepickerComponent, _super);\n    function NbRangepickerComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pickerClass = NbCalendarRangeComponent;\n        return _this;\n    }\n    Object.defineProperty(NbRangepickerComponent.prototype, \"range\", {\n        set: /**\n           * Range which will be rendered as selected.\n           * */ function (range) {\n            this.value = range;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbRangepickerComponent.prototype, \"rangeChange\", {\n        get: /**\n           * Emits range when start selected and emits again when end selected.\n           * */ function () {\n            return this.valueChange;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbRangepickerComponent.prototype, \"value\", {\n        get: function () {\n            return this.picker.range;\n        },\n        set: function (range) {\n            if (!this.picker) {\n                this.queue = range;\n                return;\n            }\n            if (range) {\n                this.picker.visibleDate = range && range.start;\n                this.picker.range = range;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NbRangepickerComponent.prototype, \"pickerValueChange\", {\n        get: function () {\n            return this.picker.rangeChange;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbRangepickerComponent.prototype.shouldHide = function () {\n        return _super.prototype.shouldHide.call(this) && !!(this.value.start && this.value.end);\n    };\n    NbRangepickerComponent.prototype.writeQueue = function () {\n        this.value = this.queue;\n    };\n    return NbRangepickerComponent;\n}(NbBasePicker));\nexport { NbRangepickerComponent };\n//# sourceMappingURL=datepicker.component.js.map\n",null]}