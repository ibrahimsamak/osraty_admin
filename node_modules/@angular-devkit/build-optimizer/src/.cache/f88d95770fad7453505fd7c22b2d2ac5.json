{"remainingRequest":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/calendar/calendar.component.js","dependencies":[{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@nebular/theme/components/calendar/calendar.component.js","mtime":499162500000},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/cache-loader/dist/cjs.js","mtime":1541238936889},{"path":"/Users/ibrahimm.samak/Desktop/liken/CPanel-API/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NbCalendarSize, NbCalendarViewMode } from '../calendar-kit';\n/**\n * Calendar component provides a capability to choose a date.\n *\n * ```html\n * <nb-calendar [(date)]=\"date\"></nb-calendar>\n * <nb-calendar [date]=\"date\" (dateChange)=\"handleDateChange($event)\"></nb-calendar>\n * ```\n *\n * Basic usage example\n * @stacked-example(Showcase, calendar/calendar-showcase.component)\n *\n * ### Installation\n *\n * Import `NbCalendarModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbCalendarModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * If you want to select ranges you can use `NbCalendarRangeComponent`.\n *\n * ```html\n * <nb-calendar-range [(range)]=\"range\"></nb-calendar-range>\n * <nb-calendar-range [range]=\"range\" (rangeChange)=\"handleRangeChange($event)\"></nb-calendar-range>\n * ```\n *\n * In order to use it, you have to import `NbCalendarRangeModule`.\n * @stacked-example(Range, calendar/calendar-range-showcase.component)\n *\n * The calendar component is supplied with a calendar header that contains navigate today button.\n * If you do not want to use it you can hide calendar header using `showHeader` property.\n * @stacked-example(Header, calendar/calendar-without-header.component)\n *\n * As you can see in the basic usage example calendar contains previous and next month days\n * which can be disabled using `boundingMonth` property.\n * @stacked-example(Bounding months, calendar/calendar-bounding-month.component)\n *\n * You can define starting view of the calendar by setting `startView` property.\n * Available values: year, month and date.\n * @stacked-example(Start view, calendar/calendar-start-view.component)\n *\n * You can use a larger version of the calendar by defining size property.\n * Available values: medium(which is default) and large.\n * @stacked-example(Size, calendar/calendar-size.component)\n *\n * Calendar supports min and max dates which disables values out of min-max range.\n * @stacked-example(Borders, calendar/calendar-min-max.component)\n *\n * Also, you can define custom filter property that should be predicate which receives\n * date and returns false if this date has to be disabled. In this example, we provide the filter\n * which disables weekdays.\n * @stacked-example(Filter, calendar/calendar-filter.component)\n *\n * If you need create custom cells you can easily provide custom components for\n * calendar. For examples if you want to show any average price under each date you can\n * just provide custom `dayCellComponent`. Custom cells for month and year can be provided\n * the same way, check API reference.\n * @stacked-example(Custom day cell, calendar/calendar-custom-day-cell-showcase.component)\n *\n * @styles\n *\n * calendar-width\n * calendar-body-height\n * calendar-header-title-font-size\n * calendar-header-title-font-weight\n * calendar-header-sub-title-font-size\n * calendar-header-sub-title-font-weight\n * calendar-navigation-button-width\n * calendar-selected-item-bg\n * calendar-hover-item-bg\n * calendar-today-item-bg\n * calendar-active-item-bg\n * calendar-fg\n * calendar-selected-fg\n * calendar-day-cell-width\n * calendar-day-cell-height\n * calendar-month-cell-width\n * calendar-month-cell-height\n * calendar-year-cell-width\n * calendar-year-cell-height\n * calendar-inactive-opacity\n * calendar-disabled-opacity\n * calendar-border-radius\n * calendar-weekday-width\n * calendar-weekday-height\n * calendar-weekday-font-size\n * calendar-weekday-font-weight\n * calendar-weekday-fg\n * calendar-weekday-holiday-fg\n * calendar-range-bg-in-range\n * calendar-large-width\n * calendar-large-body-height\n * calendar-day-cell-large-width\n * calendar-day-cell-large-height\n * calendar-month-cell-large-width\n * calendar-month-cell-large-height\n * calendar-year-cell-large-width\n * calendar-year-cell-large-height\n * */\nvar NbCalendarComponent = /*@__PURE__*/ (function () {\n    function NbCalendarComponent() {\n        /**\n           * Defines if we should render previous and next months\n           * in the current month view.\n           * */\n        this.boundingMonth = true;\n        /**\n           * Defines starting view for calendar.\n           * */\n        this.startView = NbCalendarViewMode.DATE;\n        /**\n           * Size of the calendar and entire components.\n           * Can be 'medium' which is default or 'large'.\n           * */\n        this.size = NbCalendarSize.MEDIUM;\n        /**\n           * Determines should we show calendars header or not.\n           * */\n        this.showHeader = true;\n        /**\n           * Emits date when selected.\n           * */\n        this.dateChange = new EventEmitter();\n    }\n    return NbCalendarComponent;\n}());\nexport { NbCalendarComponent };\n//# sourceMappingURL=calendar.component.js.map\n",null]}